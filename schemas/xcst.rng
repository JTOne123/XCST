<?xml version="1.0" encoding="utf-8"?>
<!--
 Copyright 2015 Max Toro Q.

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-->
<grammar xmlns="http://relaxng.org/ns/structure/1.0"
   xmlns:ann="http://relaxng.org/ns/compatibility/annotations/1.0"
   xmlns:c="http://maxtoroq.github.io/XCST"
   ns="http://maxtoroq.github.io/XCST"
   datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">

   <ann:documentation>Schema for XCST 1.0 modules and packages</ann:documentation>

   <start>
      <choice>
         <ref name="module"/>
         <ref name="package"/>
         <ref name="simplified-module"/>
      </choice>
   </start>

   <define name="declaration">
      <choice>
         <ref name="attribute-set"/>
         <ref name="function"/>
         <ref name="import"/>
         <ref name="output"/>
         <ref name="param"/>
         <ref name="template"/>
         <ref name="type"/>
         <ref name="use-package"/>
         <ref name="validation"/>
         <ref name="variable"/>
      </choice>
   </define>

   <define name="instruction">
      <choice>
         <ref name="assert"/>
         <ref name="attribute"/>
         <ref name="break"/>
         <ref name="call-template"/>
         <ref name="choose"/>
         <ref name="comment"/>
         <ref name="continue"/>
         <ref name="delegate"/>
         <ref name="element"/>
         <ref name="evaluate-delegate"/>
         <ref name="evaluate-package"/>
         <ref name="fallback"/>
         <ref name="for-each"/>
         <ref name="for-each-group"/>
         <ref name="if"/>
         <ref name="message"/>
         <ref name="namespace"/>
         <ref name="next-function"/>
         <ref name="next-template"/>
         <ref name="object"/>
         <ref name="processing-instruction"/>
         <ref name="result-document"/>
         <ref name="return"/>
         <ref name="script"/>
         <ref name="serialize"/>
         <ref name="set"/>
         <ref name="text"/>
         <ref name="try"/>
         <ref name="using"/>
         <ref name="value-of"/>
         <ref name="variable"/>
         <ref name="void"/>
         <ref name="while"/>
      </choice>
   </define>

   <define name="standard-attributes">
      <ref name="standard-attributes-except-version"/>
      <optional>
         <attribute name="version">
            <ann:documentation>The XCST version for the current and descendant elements (usually "1.0").</ann:documentation>
            <ref name="Version"/>
         </attribute>
      </optional>
   </define>

   <define name="standard-attributes-except-version">
      <zeroOrMore>
         <choice>
            <attribute name="expand-text">
               <ann:documentation>Enables or disables text value templates for descendant text nodes.</ann:documentation>
               <ref name="Boolean"/>
            </attribute>
            <attribute name="extension-element-prefixes">
               <ann:documentation>Designates namespaces as extension namespaces.</ann:documentation>
               <ref name="ExtensionElementPrefixes"/>
            </attribute>
            <attribute name="transform-text">
               <ann:documentation>Enables or disables text normalization for descendant text nodes.</ann:documentation>
               <ref name="TransformText"/>
            </attribute>
         </choice>
      </zeroOrMore>
   </define>

   <define name="literal-result-element">
      <element>
         <anyName>
            <except>
               <nsName/>
            </except>
         </anyName>
         <ref name="literal-result-element-attributes-except-version"/>
         <optional>
            <attribute name="c:version">
               <ref name="Version"/>
            </attribute>
         </optional>
         <ref name="sequence-constructor"/>
      </element>
   </define>

   <define name="literal-result-element-attributes-except-version">
      <zeroOrMore>
         <choice>
            <attribute>
               <anyName>
                  <except>
                     <nsName/>
                  </except>
               </anyName>
               <ref name="AVT"/>
            </attribute>
            <attribute name="c:expand-text">
               <ref name="Boolean"/>
            </attribute>
            <attribute name="c:extension-element-prefixes">
               <ref name="ExtensionElementPrefixes"/>
            </attribute>
            <attribute name="c:transform-text">
               <ref name="TransformText"/>
            </attribute>
            <attribute name="c:use-attribute-sets">
               <ref name="UseAttributeSets"/>
            </attribute>
         </choice>
      </zeroOrMore>
   </define>

   <define name="sequence-constructor">
      <zeroOrMore>
         <choice>
            <ref name="instruction"/>
            <ref name="literal-result-element"/>
            <text/>
         </choice>
      </zeroOrMore>
   </define>

   <define name="visibility-attribute">
      <optional>
         <attribute name="visibility">
            <ann:documentation>Specifies how the current component can be used in other (using) packages.</ann:documentation>
            <ref name="Visibility"/>
         </attribute>
      </optional>
   </define>

   <define name="user-defined-data-element">
      <element>
         <anyName>
            <except>
               <nsName/>
               <nsName ns=""/>
            </except>
         </anyName>
         <ref name="any-nodes"/>
      </element>
   </define>

   <define name="any-nodes">
      <zeroOrMore>
         <choice>
            <attribute>
               <anyName/>
            </attribute>
            <text/>
            <element>
               <anyName/>
               <ref name="any-nodes"/>
            </element>
         </choice>
      </zeroOrMore>
   </define>

   <define name="simplified-module">
      <element>
         <anyName>
            <except>
               <nsName/>
            </except>
         </anyName>
         <attribute name="c:version">
            <ref name="Version"/>
         </attribute>
         <attribute name="c:language">
            <ref name="Language"/>
         </attribute>
         <ref name="literal-result-element-attributes-except-version"/>
         <ref name="sequence-constructor"/>
      </element>
   </define>

   <define name="module">
      <element name="module">
         <ann:documentation>Represents an XCST module.</ann:documentation>
         <ref name="module-content"/>
      </element>
   </define>

   <define name="package">
      <element name="package">
         <ann:documentation>Represents an XCST package.</ann:documentation>
         <optional>
            <attribute name="name">
               <ann:documentation>The fully-qualified class name for the current package.</ann:documentation>
               <ref name="Name"/>
            </attribute>
         </optional>
         <ref name="module-content"/>
      </element>
   </define>

   <define name="module-content">
      <attribute name="version">
         <ann:documentation>The XCST version for the current and descendant elements (usually "1.0").</ann:documentation>
         <ref name="Version"/>
      </attribute>
      <attribute name="language">
         <ann:documentation>The expression language for this module (usually "C#").</ann:documentation>
         <ref name="Language"/>
      </attribute>
      <ref name="standard-attributes-except-version"/>
      <zeroOrMore>
         <ref name="use-functions"/>
      </zeroOrMore>
      <zeroOrMore>
         <choice>
            <ref name="declaration"/>
            <ref name="user-defined-data-element"/>
         </choice>
      </zeroOrMore>
   </define>

   <define name="use-functions">
      <element name="use-functions">
         <ann:documentation>Imports functions from a function library.</ann:documentation>
         <attribute name="in">
            <ann:documentation>The namespace or fully-qualified class name to import functions from.</ann:documentation>
            <ref name="Type"/>
         </attribute>
         <zeroOrMore>
            <choice>
               <attribute name="alias">
                  <ann:documentation>A name to use as prefix for imported functions.</ann:documentation>
                  <ref name="Name"/>
               </attribute>
               <attribute name="static-only">
                  <ann:documentation>Specifies whether to import static functions only. The in attribute must refer to a class.</ann:documentation>
                  <ref name="Boolean"/>
               </attribute>
            </choice>
         </zeroOrMore>
         <ref name="standard-attributes"/>
      </element>
   </define>

   <define name="use-package">
      <element name="use-package">
         <ann:documentation>Specifies a package dependency.</ann:documentation>
         <attribute name="name">
            <ann:documentation>The class name of the package to use. Must be a fully-qualified name when using from implicit or unnamed packages.</ann:documentation>
            <ref name="Name"/>
         </attribute>
         <ref name="standard-attributes"/>
         <zeroOrMore>
            <ref name="override"/>
         </zeroOrMore>
      </element>
   </define>

   <define name="override">
      <element name="override">
         <ann:documentation>Container element for overriding components.</ann:documentation>
         <ref name="standard-attributes"/>
         <zeroOrMore>
            <choice>
               <ref name="template"/>
               <ref name="function"/>
               <ref name="variable"/>
               <ref name="param"/>
               <ref name="attribute-set"/>
               <ref name="type"/>
            </choice>
         </zeroOrMore>
      </element>
   </define>

   <define name="import">
      <element name="import">
         <ann:documentation>Specifies a module dependency.</ann:documentation>
         <attribute name="href">
            <ann:documentation>The relative or absolute URI of the module to import.</ann:documentation>
            <ref name="URI"/>
         </attribute>
         <ref name="standard-attributes"/>
      </element>
   </define>

   <define name="template">
      <element name="template">
         <ann:documentation>Defines a template.</ann:documentation>
         <attribute name="name">
            <ann:documentation>The name of the template.</ann:documentation>
            <ref name="EQName"/>
         </attribute>
         <optional>
            <attribute name="as">
               <ann:documentation>The return type.</ann:documentation>
               <ref name="Type"/>
            </attribute>
         </optional>
         <ref name="visibility-attribute"/>
         <ref name="standard-attributes"/>
         <zeroOrMore>
            <ref name="param"/>
         </zeroOrMore>
         <ref name="sequence-constructor"/>
      </element>
   </define>

   <define name="function">
      <element name="function">
         <ann:documentation>Defines a function.</ann:documentation>
         <attribute name="name">
            <ann:documentation>The name of the function.</ann:documentation>
            <ref name="Name"/>
         </attribute>
         <optional>
            <attribute name="as">
               <ann:documentation>The return type. Omit this attribute for void functions.</ann:documentation>
               <ref name="Type"/>
            </attribute>
         </optional>
         <ref name="visibility-attribute"/>
         <ref name="standard-attributes"/>
         <zeroOrMore>
            <ref name="param"/>
         </zeroOrMore>
         <ref name="sequence-constructor"/>
      </element>
   </define>

   <define name="param">
      <element name="param">
         <ann:documentation>Defines a package, template, function or delegate parameter.</ann:documentation>
         <attribute name="name">
            <ann:documentation>The name of the parameter.</ann:documentation>
            <ref name="Name"/>
         </attribute>
         <choice>
            <attribute name="value">
               <ann:documentation>The default value of the parameter.</ann:documentation>
               <ref name="Expression"/>
            </attribute>
            <ref name="sequence-constructor"/>
         </choice>
         <zeroOrMore>
            <choice>
               <attribute name="as">
                  <ann:documentation>The type of the parameter.</ann:documentation>
                  <ref name="Type"/>
               </attribute>
               <attribute name="required">
                  <ann:documentation>Specifies if the parameter is required.</ann:documentation>
                  <ref name="Boolean"/>
               </attribute>
               <attribute name="tunnel">
                  <ann:documentation>Specifies if the parameter is a tunnel parameter.</ann:documentation>
                  <ref name="Boolean"/>
               </attribute>
            </choice>
         </zeroOrMore>
         <ref name="standard-attributes"/>
      </element>
   </define>

   <define name="attribute-set">
      <element name="attribute-set">
         <ann:documentation>Defines an attribute set.</ann:documentation>
         <attribute name="name">
            <ann:documentation>The name of the attribute set.</ann:documentation>
            <ref name="EQName"/>
         </attribute>
         <optional>
            <attribute name="use-attribute-sets">
               <ann:documentation>Specifies other attribute sets to use before the current one.</ann:documentation>
               <ref name="UseAttributeSets"/>
            </attribute>
         </optional>
         <ref name="visibility-attribute"/>
         <ref name="standard-attributes"/>
         <zeroOrMore>
            <ref name="attribute"/>
         </zeroOrMore>
      </element>
   </define>

   <define name="type">
      <element name="type">
         <ann:documentation>Defines a type.</ann:documentation>
         <attribute name="name">
            <ann:documentation>The name of the type.</ann:documentation>
            <ref name="Name"/>
         </attribute>
         <ref name="visibility-attribute"/>
         <ref name="type-or-member-attributes"/>
         <ref name="standard-attributes"/>
         <zeroOrMore>
            <ref name="metadata"/>
         </zeroOrMore>
         <zeroOrMore>
            <ref name="member"/>
         </zeroOrMore>
      </element>
   </define>

   <define name="member">
      <element name="member">
         <ann:documentation>Defines a type member.</ann:documentation>
         <attribute name="name">
            <ann:documentation>The name of the member.</ann:documentation>
            <ref name="Name"/>
         </attribute>
         <zeroOrMore>
            <ref name="metadata"/>
         </zeroOrMore>
         <optional>
            <choice>
               <attribute name="as">
                  <ann:documentation>The type of the member.</ann:documentation>
                  <ref name="Type"/>
               </attribute>
               <oneOrMore>
                  <ref name="member"/>
               </oneOrMore>
            </choice>
         </optional>
         <optional>
            <choice>
               <attribute name="value">
                  <ann:documentation>An initial value for this member.</ann:documentation>
                  <ref name="Expression"/>
               </attribute>
               <attribute name="expression">
                  <ann:documentation>An expression for computed members.</ann:documentation>
                  <ref name="Expression"/>
               </attribute>
            </choice>
         </optional>
         <zeroOrMore>
            <choice>
               <attribute name="auto-initialize">
                  <ann:documentation>Auto-assign an initial value to this member.</ann:documentation>
                  <ref name="Boolean"/>
               </attribute>
               <attribute name="display">
                  <ann:documentation>Specifies if this member should be displayed in a UI.</ann:documentation>
                  <choice>
                     <value>view-only</value>
                     <ann:documentation>Indicates that this member should only be displayed in a viewing UI.</ann:documentation>

                     <value>edit-only</value>
                     <ann:documentation>Indicates that this member should only be displayed in an editing UI.</ann:documentation>

                     <ref name="Boolean"/>
                  </choice>
               </attribute>
               <attribute name="display-name">
                  <ann:documentation>A name suitable for UI.</ann:documentation>
                  <ref name="String"/>
               </attribute>
               <attribute name="description">
                  <ann:documentation>A description of this member suitable for UI.</ann:documentation>
                  <ref name="String"/>
               </attribute>
               <attribute name="short-name">
                  <ann:documentation>A shorter name suitable for UI where the display name would be too long to fit (e.g. a table column).</ann:documentation>
                  <ref name="String"/>
               </attribute>
               <attribute name="place-holder">
                  <ann:documentation>A hint to the user of what can be entered in a control for this member.</ann:documentation>
                  <ref name="String"/>
               </attribute>
               <attribute name="order">
                  <ann:documentation>A number that indicates the relative position of this member in a UI.</ann:documentation>
                  <ref name="Integer"/>
               </attribute>
               <attribute name="group">
                  <ann:documentation>A name that is used to group members in a UI.</ann:documentation>
                  <ref name="String"/>
               </attribute>
               <attribute name="format">
                  <ann:documentation>A formatting string that specifies the display format for the value of this member.</ann:documentation>
                  <ref name="String"/>
               </attribute>
               <attribute name="apply-format-in-edit-mode">
                  <ann:documentation>Specifies if the display format should be used in an edit control for this member.</ann:documentation>
                  <ref name="Boolean"/>
               </attribute>
               <attribute name="disable-output-escaping">
                  <ann:documentation>Specifies if this member should not be escaped when displaying in a UI (e.g. HTML content).</ann:documentation>
                  <ref name="Boolean"/>
               </attribute>
               <attribute name="null-display-text">
                  <ann:documentation>A text that is displayed for this member when the value is null.</ann:documentation>
                  <ref name="String"/>
               </attribute>
               <attribute name="template">
                  <ann:documentation>The name of a template to use when displaying this member in a UI.</ann:documentation>
                  <ref name="String"/>
               </attribute>
               <attribute name="read-only">
                  <ann:documentation>Specifies if editing should be disabled for this member in an editing UI.</ann:documentation>
                  <ref name="Boolean"/>
               </attribute>
               <attribute name="auto-generate-filter">
                  <ann:documentation>Specifies if a filtering control should be automatically displayed for this member in a UI.</ann:documentation>
                  <ref name="Boolean"/>
               </attribute>
               <attribute name="data-type">
                  <choice>
                     <value>CreditCard</value>
                     <value>Currency</value>
                     <value>Date</value>
                     <value>DateTime</value>
                     <value>Duration</value>
                     <value>EmailAddress</value>
                     <value>Html</value>
                     <value>ImageUrl</value>
                     <value>MultilineText</value>
                     <value>Password</value>
                     <value>PhoneNumber</value>
                     <value>PostalCode</value>
                     <value>Text</value>
                     <value>Time</value>
                     <value>Upload</value>
                     <value>Url</value>
                  </choice>
               </attribute>
               <attribute name="required">
                  <ann:documentation>Specifies if this member is required.</ann:documentation>
                  <ref name="Boolean"/>
               </attribute>
               <attribute name="max-length">
                  <ann:documentation>A maximum valid string length for this member.</ann:documentation>
                  <ref name="Expression"/>
               </attribute>
               <attribute name="min-length">
                  <ann:documentation>A minimum valid string length for this member.</ann:documentation>
                  <ref name="Expression"/>
               </attribute>
               <attribute name="pattern">
                  <ann:documentation>A regular expression that a valid value for this member must conform to.</ann:documentation>
                  <ref name="String"/>
               </attribute>
               <attribute name="min">
                  <ann:documentation>A minimum valid value for this member.</ann:documentation>
                  <ref name="String"/>
               </attribute>
               <attribute name="max">
                  <ann:documentation>A maximum valid value for this member.</ann:documentation>
                  <ref name="String"/>
               </attribute>
               <attribute name="equal-to">
                  <ann:documentation>The name of another member that a valid value for this member should be equal to.</ann:documentation>
                  <ref name="Name"/>
               </attribute>
            </choice>
         </zeroOrMore>
         <ref name="type-or-member-attributes"/>
         <ref name="standard-attributes"/>
      </element>
   </define>

   <define name="metadata">
      <element name="metadata">
         <ann:documentation>Defines type or member custom metadata.</ann:documentation>
         <attribute name="value">
            <ann:documentation>The metadata expression.</ann:documentation>
            <ref name="Expression"/>
         </attribute>
      </element>
   </define>

   <define name="type-or-member-attributes">
      <zeroOrMore>
         <choice>
            <attribute name="resource-type">
               <ann:documentation>A type that contains resources for name, short-name, description and placeholder attributes.</ann:documentation>
               <ref name="Type"/>
            </attribute>
            <attribute name="disable-empty-string-to-null-conversion">
               <ann:documentation>Specifies if empty strings should not be converted to null for this member.</ann:documentation>
               <ref name="Boolean"/>
            </attribute>
            <attribute name="allow-empty-string">
               <ann:documentation>Specifies if an empty string is a valid value for this member.</ann:documentation>
               <ref name="Boolean"/>
            </attribute>
            <attribute name="display-text-member">
               <ann:documentation>The name of the member to use as the text representation for this type.</ann:documentation>
               <ref name="Name"/>
            </attribute>
         </choice>
      </zeroOrMore>
      <ref name="validation-attributes"/>
   </define>

   <define name="output">
      <element name="output">
         <ann:documentation>Defines serialization parameters.</ann:documentation>
         <zeroOrMore>
            <choice>
               <attribute name="name">
                  <ann:documentation>The name of the output definition.</ann:documentation>
                  <ref name="EQName"/>
               </attribute>
               <attribute name="method">
                  <ann:documentation>Specifies the output format.</ann:documentation>
                  <ref name="OutputMethod"/>
               </attribute>
               <attribute name="byte-order-mark">
                  <ann:documentation>Specifies whether a byte order mark is written at the start of the file.</ann:documentation>
                  <ref name="Boolean"/>
               </attribute>
               <attribute name="cdata-section-elements">
                  <ann:documentation>Specifies elements whose child text nodes should be wrapped in a CDATA section.</ann:documentation>
                  <ref name="CDataSectionElements"/>
               </attribute>
               <attribute name="doctype-public">
                  <ann:documentation>Specifies a public document type declaration.</ann:documentation>
                  <ref name="String"/>
               </attribute>
               <attribute name="doctype-system">
                  <ann:documentation>Specifies a system document type declaration.</ann:documentation>
                  <ref name="String"/>
               </attribute>
               <attribute name="encoding">
                  <ann:documentation>Specifies the output encoding.</ann:documentation>
                  <ref name="String"/>
               </attribute>
               <attribute name="escape-uri-attributes">
                  <ann:documentation>Specifies whether to escape URI attributes in HTML and XHTML documents.</ann:documentation>
                  <ref name="Boolean"/>
               </attribute>
               <attribute name="html-version">
                  <ann:documentation>Specifies the HTML version.</ann:documentation>
                  <ref name="Decimal"/>
               </attribute>
               <attribute name="include-content-type">
                  <ann:documentation>Specifies whether to include a meta element in the head of HTML and XHTML documents, specifying the used character encoding.</ann:documentation>
                  <ref name="Boolean"/>
               </attribute>
               <attribute name="indent">
                  <ann:documentation>Specifies whether to indent the output.</ann:documentation>
                  <ref name="Boolean"/>
               </attribute>
               <attribute name="indent-spaces">
                  <ann:documentation>The number of spaces to use for indenting.</ann:documentation>
                  <ref name="Integer"/>
               </attribute>
               <attribute name="item-separator">
                  <ann:documentation>A string to intersperse when outputting multiple items.</ann:documentation>
                  <ref name="String"/>
               </attribute>
               <attribute name="media-type">
                  <ann:documentation>The media type (MIME content type) of the output, to include in a meta element in the head of HTML and XHTML documents.</ann:documentation>
                  <ref name="String"/>
               </attribute>
               <attribute name="omit-xml-declaration">
                  <ann:documentation>Specifies whether to omit the XML declaration.</ann:documentation>
                  <ref name="Boolean"/>
               </attribute>
               <attribute name="standalone">
                  <ann:documentation>Specifies whether to include the standalone document declaration.</ann:documentation>
                  <ref name="OutputStandalone"/>
               </attribute>
               <attribute name="suppress-indentation">
                  <ann:documentation>Specifies elements that should not be indented.</ann:documentation>
                  <ref name="SuppressIndentation"/>
               </attribute>
               <attribute name="undeclare-prefixes">
                  <ann:documentation>Specifies whether to undeclare namespaces when outputting XML 1.1.</ann:documentation>
                  <ref name="Boolean"/>
               </attribute>
               <attribute name="version">
                  <ann:documentation>The version of the output format.</ann:documentation>
                  <ref name="OutputVersion"/>
               </attribute>
               <ref name="standard-attributes-except-version"/>
            </choice>
         </zeroOrMore>
      </element>
   </define>

   <define name="validation">
      <element name="validation">
         <ann:documentation>Defines default values for validation messages.</ann:documentation>
         <ref name="validation-attributes"/>
      </element>
   </define>

   <define name="validation-attributes">
      <zeroOrMore>
         <choice>
            <attribute name="error-resource-type">
               <ann:documentation>A type that contains error message resources for validation attributes.</ann:documentation>
               <ref name="Type"/>
            </attribute>
            <attribute name="data-type-error-message">
               <ann:documentation>An error message for the data-type attribute.</ann:documentation>
               <ref name="String"/>
            </attribute>
            <attribute name="data-type-error-resource">
               <ann:documentation>A resource name that contains an error message for the data-type attribute.</ann:documentation>
               <ref name="String"/>
            </attribute>
            <attribute name="required-error-message">
               <ann:documentation>An error message for the required attribute.</ann:documentation>
               <ref name="String"/>
            </attribute>
            <attribute name="required-error-resource">
               <ann:documentation>A resource name that contains an error message for the required attribute.</ann:documentation>
               <ref name="String"/>
            </attribute>
            <attribute name="length-error-message">
               <ann:documentation>An error message for the min-length and max-length attributes.</ann:documentation>
               <ref name="String"/>
            </attribute>
            <attribute name="length-error-resource">
               <ann:documentation>A resource name that contains an error message for the min-length and max-length attributes.</ann:documentation>
               <ref name="String"/>
            </attribute>
            <attribute name="pattern-error-message">
               <ann:documentation>An error message for the pattern attribute.</ann:documentation>
               <ref name="String"/>
            </attribute>
            <attribute name="pattern-error-resource">
               <ann:documentation>A resource name that contains an error message for the pattern attribute.</ann:documentation>
               <ref name="String"/>
            </attribute>
            <attribute name="range-error-message">
               <ann:documentation>An error message for the min and max attributes.</ann:documentation>
               <ref name="String"/>
            </attribute>
            <attribute name="range-error-resource">
               <ann:documentation>A resource name that contains an error message for the min and max attributes.</ann:documentation>
               <ref name="String"/>
            </attribute>
            <attribute name="equal-to-error-message">
               <ann:documentation>An error message for the equal-to attribute.</ann:documentation>
               <ref name="String"/>
            </attribute>
            <attribute name="equal-to-error-resource">
               <ann:documentation>A resource name that contains an error message for the equal-to attribute.</ann:documentation>
               <ref name="String"/>
            </attribute>
         </choice>
      </zeroOrMore>
   </define>

   <!--
      ## Instructions
   -->

   <define name="assert">
      <element name="assert">
         <ann:documentation>Checks for a condition and signals a message if the condition is false.</ann:documentation>
         <attribute name="test">
            <ann:documentation>The condition to check for.</ann:documentation>
            <ref name="Expression"/>
         </attribute>
         <choice>
            <attribute name="value">
               <ann:documentation>A message to signal.</ann:documentation>
               <ref name="Expression"/>
            </attribute>
            <ref name="sequence-constructor"/>
         </choice>
         <ref name="standard-attributes"/>
      </element>
   </define>

   <define name="attribute">
      <element name="attribute">
         <ann:documentation>Creates an attribute node.</ann:documentation>
         <attribute name="name">
            <ann:documentation>The name of the attribute. Attribute value template (QName).</ann:documentation>
            <choice>
               <ref name="QName"/>
               <ref name="AVTExpr"/>
            </choice>
         </attribute>
         <choice>
            <attribute name="value">
               <ann:documentation>The value of the attribute.</ann:documentation>
               <ref name="Expression"/>
            </attribute>
            <ref name="sequence-constructor"/>
         </choice>
         <zeroOrMore>
            <choice>
               <attribute name="namespace">
                  <ann:documentation>The namespace of the attribute. Attribute value template (URI).</ann:documentation>
                  <choice>
                     <ref name="URI"/>
                     <ref name="AVTExpr"/>
                  </choice>
               </attribute>
               <attribute name="separator">
                  <ann:documentation>A string to intersperse between values. Attribute value template.</ann:documentation>
                  <ref name="AVT"/>
               </attribute>
            </choice>
         </zeroOrMore>
         <ref name="standard-attributes"/>
      </element>
   </define>

   <define name="break">
      <element name="break">
         <ann:documentation>Exits from a loop.</ann:documentation>
         <ref name="standard-attributes"/>
      </element>
   </define>

   <define name="call-template">
      <element name="call-template">
         <ann:documentation>Invokes a template.</ann:documentation>
         <attribute name="name">
            <ann:documentation>The name of the template to invoke.</ann:documentation>
            <ref name="EQName"/>
         </attribute>
         <ref name="standard-attributes"/>
         <zeroOrMore>
            <ref name="with-param"/>
         </zeroOrMore>
      </element>
   </define>

   <define name="catch">
      <element name="catch">
         <ann:documentation>Catches an exception.</ann:documentation>
         <zeroOrMore>
            <choice>
               <attribute name="exception">
                  <ann:documentation>The exception to catch.</ann:documentation>
                  <ref name="Expression"/>
               </attribute>
               <attribute name="when">
                  <ann:documentation>An exception filter.</ann:documentation>
                  <ref name="Expression"/>
               </attribute>
            </choice>
         </zeroOrMore>
         <choice>
            <attribute name="value">
               <ann:documentation>A value to output.</ann:documentation>
               <ref name="Expression"/>
            </attribute>
            <ref name="sequence-constructor"/>
         </choice>
         <ref name="standard-attributes"/>
      </element>
   </define>

   <define name="choose">
      <element name="choose">
         <ann:documentation>Chooses between multiple alternatives.</ann:documentation>
         <ref name="standard-attributes"/>
         <oneOrMore>
            <ref name="when"/>
         </oneOrMore>
         <optional>
            <ref name="otherwise"/>
         </optional>
      </element>
   </define>

   <define name="comment">
      <element name="comment">
         <ann:documentation>Creates a comment node.</ann:documentation>
         <choice>
            <attribute name="value">
               <ann:documentation>The comment.</ann:documentation>
               <ref name="Expression"/>
            </attribute>
            <ref name="sequence-constructor"/>
         </choice>
         <ref name="standard-attributes"/>
      </element>
   </define>

   <define name="continue">
      <element name="continue">
         <ann:documentation>Interrupts the current loop iteration and advances to the next.</ann:documentation>
         <ref name="standard-attributes"/>
      </element>
   </define>

   <define name="delegate">
      <element name="delegate">
         <ann:documentation>Creates a template delegate.</ann:documentation>
         <ref name="standard-attributes"/>
         <zeroOrMore>
            <ref name="param"/>
         </zeroOrMore>
         <ref name="sequence-constructor"/>
      </element>
   </define>

   <define name="element">
      <element name="element">
         <ann:documentation>Creates an element node.</ann:documentation>
         <attribute name="name">
            <ann:documentation>The name of the element. Attribute value template (QName).</ann:documentation>
            <choice>
               <ref name="QName-default"/>
               <ref name="AVTExpr"/>
            </choice>
         </attribute>
         <zeroOrMore>
            <choice>
               <attribute name="namespace">
                  <ann:documentation>The namespace of the element. Attribute value template (URI).</ann:documentation>
                  <choice>
                     <ref name="URI"/>
                     <ref name="AVTExpr"/>
                  </choice>
               </attribute>
               <attribute name="use-attribute-sets">
                  <ann:documentation>Specifies attribute sets to use on the element.</ann:documentation>
                  <ref name="UseAttributeSets"/>
               </attribute>
            </choice>
         </zeroOrMore>
         <ref name="standard-attributes"/>
         <ref name="sequence-constructor"/>
      </element>
   </define>

   <define name="evaluate-delegate">
      <element name="evaluate-delegate">
         <ann:documentation>Evaluates a template delegate.</ann:documentation>
         <attribute name="value">
            <ann:documentation>The template delegate instance.</ann:documentation>
            <ref name="Expression"/>
         </attribute>
         <optional>
            <attribute name="with-params">
               <ann:documentation>An object with parameters.</ann:documentation>
               <ref name="Expression"/>
            </attribute>
         </optional>
         <ref name="standard-attributes"/>
         <zeroOrMore>
            <ref name="with-param"/>
         </zeroOrMore>
      </element>
   </define>

   <define name="evaluate-package">
      <element name="evaluate-package">
         <ann:documentation>Evaluates a dynamically loaded package.</ann:documentation>
         <choice>
            <attribute name="name">
               <ann:documentation>The name of the package.</ann:documentation>
               <ref name="Name"/>
            </attribute>
            <attribute name="value">
               <ann:documentation>The package instance.</ann:documentation>
               <ref name="Expression"/>
            </attribute>
         </choice>
         <zeroOrMore>
            <choice>
               <attribute name="global-params">
                  <ann:documentation>An object with global parameters.</ann:documentation>
                  <ref name="Expression"/>
               </attribute>
               <attribute name="initial-template">
                  <ann:documentation>The name of the initial template. Attribute value template (EQName).</ann:documentation>
                  <choice>
                     <ref name="EQName"/>
                     <ref name="AVTExpr"/>
                  </choice>
               </attribute>
               <attribute name="template-params">
                  <ann:documentation>An object with template parameters.</ann:documentation>
                  <ref name="Expression"/>
               </attribute>
               <attribute name="tunnel-params">
                  <ann:documentation>An object with tunnel template parameters.</ann:documentation>
                  <ref name="Expression"/>
               </attribute>
            </choice>
         </zeroOrMore>
         <ref name="standard-attributes"/>
      </element>
   </define>

   <define name="fallback">
      <element name="fallback">
         <ann:documentation>Defines fallback behavior for the parent element.</ann:documentation>
         <ref name="standard-attributes"/>
         <ref name="sequence-constructor"/>
      </element>
   </define>

   <define name="finally">
      <element name="finally">
         <ann:documentation>Defines unconditional behavior for the c:try instruction.</ann:documentation>
         <choice>
            <attribute name="value">
               <ann:documentation>A value to output.</ann:documentation>
               <ref name="Expression"/>
            </attribute>
            <ref name="sequence-constructor"/>
         </choice>
         <ref name="standard-attributes"/>
      </element>
   </define>

   <define name="for-each">
      <element name="for-each">
         <ann:documentation>Processes each item in a sequence of items.</ann:documentation>
         <attribute name="name">
            <ann:documentation>The name of the item.</ann:documentation>
            <ref name="Name"/>
         </attribute>
         <attribute name="in">
            <ann:documentation>The source of the items.</ann:documentation>
            <ref name="Expression"/>
         </attribute>
         <optional>
            <attribute name="as">
               <ann:documentation>The type of the item.</ann:documentation>
               <ref name="Type"/>
            </attribute>
         </optional>
         <ref name="standard-attributes"/>
         <zeroOrMore>
            <ref name="sort"/>
         </zeroOrMore>
         <ref name="sequence-constructor"/>
      </element>
   </define>

   <define name="for-each-group">
      <element name="for-each-group">
         <ann:documentation>Processes a sequence of items in groups.</ann:documentation>
         <attribute name="name">
            <ann:documentation>The name of the group.</ann:documentation>
            <ref name="Name"/>
         </attribute>
         <attribute name="in">
            <ann:documentation>The source of the items.</ann:documentation>
            <ref name="Expression"/>
         </attribute>
         <optional>
            <choice>
               <attribute name="group-by">
                  <ann:documentation>An expression to use as grouping key.</ann:documentation>
                  <ref name="Expression"/>
               </attribute>
               <attribute name="group-size">
                  <ann:documentation>The maximum number of items a group may have.</ann:documentation>
                  <ref name="Expression"/>
               </attribute>
            </choice>
         </optional>
         <zeroOrMore>
            <ref name="sort"/>
         </zeroOrMore>
         <ref name="sequence-constructor"/>
      </element>
   </define>

   <define name="if">
      <element name="if">
         <ann:documentation>Defines conditional behavior.</ann:documentation>
         <attribute name="test">
            <ann:documentation>The condition to check for the contents to be processed.</ann:documentation>
            <ref name="Expression"/>
         </attribute>
         <ref name="standard-attributes"/>
         <ref name="sequence-constructor"/>
      </element>
   </define>

   <define name="message">
      <element name="message">
         <ann:documentation>Signals a message.</ann:documentation>
         <choice>
            <attribute name="value">
               <ann:documentation>The message.</ann:documentation>
               <ref name="Expression"/>
            </attribute>
            <ref name="sequence-constructor"/>
         </choice>
         <optional>
            <attribute name="terminate">
               <ann:documentation>Specifies whether to stop the execution of the program. Attribute value template (Boolean).</ann:documentation>
               <choice>
                  <ref name="Boolean"/>
                  <ref name="AVTExpr"/>
               </choice>
            </attribute>
         </optional>
         <ref name="standard-attributes"/>
      </element>
   </define>

   <define name="namespace">
      <element name="namespace">
         <ann:documentation>Creates a namespace node.</ann:documentation>
         <attribute name="name">
            <ann:documentation>The namespace prefix. Attribute value template (NCName).</ann:documentation>
            <choice>
               <ref name="NCName"/>
               <ref name="AVTExpr"/>
            </choice>
         </attribute>
         <choice>
            <attribute name="value">
               <ann:documentation>The namespace URI.</ann:documentation>
               <ref name="Expression"/>
            </attribute>
            <ref name="sequence-constructor"/>
         </choice>
         <ref name="standard-attributes"/>
      </element>
   </define>

   <define name="next-function">
      <element name="next-function">
         <ann:documentation>Invokes the overriden function.</ann:documentation>
         <optional>
            <attribute name="arguments">
               <ann:documentation>The function call arguments.</ann:documentation>
               <ref name="ArgumentList"/>
            </attribute>
         </optional>
         <ref name="standard-attributes"/>
      </element>
   </define>

   <define name="next-template">
      <element name="next-template">
         <ann:documentation>Invokes the overriden template.</ann:documentation>
         <ref name="standard-attributes"/>
         <zeroOrMore>
            <ref name="with-param"/>
         </zeroOrMore>
      </element>
   </define>

   <define name="object">
      <element name="object">
         <ann:documentation>Appends a value to the current output.</ann:documentation>
         <attribute name="value">
            <ann:documentation>The value to output.</ann:documentation>
            <ref name="Expression"/>
         </attribute>
         <ref name="standard-attributes"/>
      </element>
   </define>

   <define name="otherwise">
      <element name="otherwise">
         <ann:documentation>Represents a fallback in a c:choose instruction in case no other choice is selected.</ann:documentation>
         <ref name="standard-attributes"/>
         <ref name="sequence-constructor"/>
      </element>
   </define>

   <define name="processing-instruction">
      <element name="processing-instruction">
         <ann:documentation>Creates a processing instruction node.</ann:documentation>
         <attribute name="name">
            <ann:documentation>The name of the processing instruction. Attribute value template (NCName).</ann:documentation>
            <choice>
               <ref name="NCName"/>
               <ref name="AVTExpr"/>
            </choice>
         </attribute>
         <choice>
            <attribute name="value">
               <ann:documentation>The processing instruction content.</ann:documentation>
               <ref name="Expression"/>
            </attribute>
            <ref name="sequence-constructor"/>
         </choice>
         <ref name="standard-attributes"/>
      </element>
   </define>

   <define name="result-document">
      <element name="result-document">
         <ann:documentation>Creates a secondary result.</ann:documentation>
         <attribute name="href">
            <ann:documentation>The relative or absolute URI to send the result to. Attribute value template (URI).</ann:documentation>
            <choice>
               <ref name="URI"/>
               <ref name="AVTExpr"/>
            </choice>
         </attribute>
         <ref name="output-avt-attributes"/>
         <ref name="standard-attributes"/>
         <ref name="sequence-constructor"/>
      </element>
   </define>

   <define name="return">
      <element name="return">
         <ann:documentation>Exits from a template or function.</ann:documentation>
         <choice>
            <attribute name="value">
               <ann:documentation>A value to return.</ann:documentation>
               <ref name="Expression"/>
            </attribute>
            <ref name="sequence-constructor"/>
         </choice>
         <ref name="standard-attributes"/>
      </element>
   </define>

   <define name="script">
      <element name="script">
         <ann:documentation>Embeds or references a script of code.</ann:documentation>
         <ref name="standard-attributes"/>
         <choice>
            <attribute name="src">
               <ann:documentation>The relative or absolute URI of the script of code.</ann:documentation>
               <ref name="URI"/>
            </attribute>
            <text/>
         </choice>
      </element>
   </define>

   <define name="serialize">
      <element name="serialize">
         <ann:documentation>Creates a string representation of its contents.</ann:documentation>
         <ref name="output-avt-attributes"/>
         <ref name="standard-attributes"/>
         <ref name="sequence-constructor"/>
      </element>
   </define>

   <define name="set">
      <element name="set">
         <ann:documentation>Assigns a value to a variable or object member.</ann:documentation>
         <attribute name="member">
            <ann:documentation>The reference to set.</ann:documentation>
            <ref name="Expression"/>
         </attribute>
         <choice>
            <attribute name="value">
               <ann:documentation>The value to assign.</ann:documentation>
               <ref name="Expression"/>
            </attribute>
            <ref name="sequence-constructor"/>
         </choice>
         <optional>
            <attribute name="as">
               <ann:documentation>The type of the value.</ann:documentation>
               <ref name="Type"/>
            </attribute>
         </optional>
         <ref name="standard-attributes"/>
      </element>
   </define>

   <define name="sort">
      <element name="sort">
         <ann:documentation>Defines how to sort sequences of items.</ann:documentation>
         <zeroOrMore>
            <choice>
               <attribute name="value">
                  <ann:documentation>An expression to use as sort key.</ann:documentation>
                  <ref name="Expression"/>
               </attribute>
               <attribute name="order">
                  <ann:documentation>Specifies the sort direction ("ascending" or "descending"). Attribute value template.</ann:documentation>
                  <choice>
                     <ref name="SortOrder"/>
                     <ref name="AVTExpr"/>
                  </choice>
               </attribute>
            </choice>
         </zeroOrMore>
      </element>
   </define>

   <define name="text">
      <element name="text">
         <ann:documentation>Creates a text node or string.</ann:documentation>
         <optional>
            <attribute name="disable-output-escaping">
               <ann:documentation>Specifies whether to omit output escaping.</ann:documentation>
               <ref name="Boolean"/>
            </attribute>
         </optional>
         <ref name="standard-attributes"/>
         <text/>
      </element>
   </define>

   <define name="try">
      <element name="try">
         <ann:documentation>Recovers from exceptions or defines unconditional behavior.</ann:documentation>
         <choice>
            <attribute name="value">
               <ann:documentation>A value to output.</ann:documentation>
               <ref name="Expression"/>
            </attribute>
            <ref name="sequence-constructor"/>
         </choice>
         <optional>
            <attribute name="rollback-output">
               <ann:documentation>Specifies whether to discard the output when an exception occurs.</ann:documentation>
               <ref name="Boolean"/>
            </attribute>
         </optional>
         <ref name="standard-attributes"/>
         <choice>
            <group>
               <oneOrMore>
                  <ref name="catch"/>
               </oneOrMore>
               <optional>
                  <ref name="finally"/>
               </optional>
            </group>
            <ref name="finally"/>
         </choice>
      </element>
   </define>

   <define name="using">
      <element name="using">
         <ann:documentation>Facilitates the unconditional disposing of an object.</ann:documentation>
         <attribute name="value">
            <ann:documentation>The disposable object.</ann:documentation>
            <ref name="Expression"/>
         </attribute>
         <zeroOrMore>
            <choice>
               <attribute name="name">
                  <ann:documentation>The name of the disposable variable.</ann:documentation>
                  <ref name="Name"/>
               </attribute>
               <attribute name="as">
                  <ann:documentation>The type of the disposable variable.</ann:documentation>
                  <ref name="Type"/>
               </attribute>
            </choice>
         </zeroOrMore>
         <ref name="standard-attributes"/>
         <ref name="sequence-constructor"/>
      </element>
   </define>

   <define name="value-of">
      <element name="value-of">
         <ann:documentation>Creates a text node or string.</ann:documentation>
         <choice>
            <attribute name="value">
               <ann:documentation>The content of the text node or string.</ann:documentation>
               <ref name="Expression"/>
            </attribute>
            <ref name="sequence-constructor"/>
         </choice>
         <zeroOrMore>
            <choice>
               <attribute name="disable-output-escaping">
                  <ann:documentation>Specifies whether to omit output escaping.</ann:documentation>
                  <ref name="Boolean"/>
               </attribute>
               <attribute name="separator">
                  <ann:documentation>A string to intersperse between values. Attribute value template.</ann:documentation>
                  <ref name="AVT"/>
               </attribute>
            </choice>
         </zeroOrMore>
         <ref name="standard-attributes"/>
      </element>
   </define>

   <define name="variable">
      <element name="variable">
         <ann:documentation>Defines a variable.</ann:documentation>
         <attribute name="name">
            <ann:documentation>The name of the variable.</ann:documentation>
            <ref name="Name"/>
         </attribute>
         <choice>
            <attribute name="value">
               <ann:documentation>The initial value of the variable.</ann:documentation>
               <ref name="Expression"/>
            </attribute>
            <ref name="sequence-constructor"/>
         </choice>
         <optional>
            <attribute name="as">
               <ann:documentation>The type of the variable.</ann:documentation>
               <ref name="Type"/>
            </attribute>
         </optional>
         <ref name="visibility-attribute"/>
         <ref name="standard-attributes"/>
      </element>
   </define>

   <define name="void">
      <element name="void">
         <ann:documentation>Evaluates ignoring the result.</ann:documentation>
         <choice>
            <attribute name="value">
               <ann:documentation>The expression to evaluate.</ann:documentation>
               <ref name="Expression"/>
            </attribute>
            <ref name="sequence-constructor"/>
         </choice>
         <ref name="standard-attributes"/>
      </element>
   </define>

   <define name="when">
      <element name="when">
         <ann:documentation>Represents a choice in a c:choose instruction.</ann:documentation>
         <attribute name="test">
            <ann:documentation>The condition to check for the current choice to be selected.</ann:documentation>
            <ref name="Expression"/>
         </attribute>
         <ref name="standard-attributes"/>
         <ref name="sequence-constructor"/>
      </element>
   </define>

   <define name="while">
      <element name="while">
         <ann:documentation>Repeateadly evaluates instructions until a condition is not met.</ann:documentation>
         <attribute name="test">
            <ann:documentation>The condition for the loop to continue.</ann:documentation>
            <ref name="Expression"/>
         </attribute>
         <ref name="standard-attributes"/>
         <ref name="sequence-constructor"/>
      </element>
   </define>

   <define name="with-param">
      <element name="with-param">
         <ann:documentation>Defines parameter arguments for a template or delegate.</ann:documentation>
         <attribute name="name">
            <ann:documentation>The name of the parameter.</ann:documentation>
            <ref name="Name"/>
         </attribute>
         <choice>
            <attribute name="value">
               <ann:documentation>The value of the parameter.</ann:documentation>
               <ref name="Expression"/>
            </attribute>
            <ref name="sequence-constructor"/>
         </choice>
         <zeroOrMore>
            <choice>
               <attribute name="as">
                  <ann:documentation>The type of the parameter.</ann:documentation>
                  <ref name="Type"/>
               </attribute>
               <attribute name="tunnel">
                  <ann:documentation>Specifies if the parameter should be tunneled.</ann:documentation>
                  <ref name="Boolean"/>
               </attribute>
            </choice>
         </zeroOrMore>
         <ref name="standard-attributes"/>
      </element>
   </define>

   <define name="output-avt-attributes">
      <zeroOrMore>
         <choice>
            <attribute name="format">
               <ann:documentation>The name of the output definition to get serialization parameters from. Attribute value template (EQName).</ann:documentation>
               <choice>
                  <ref name="EQName"/>
                  <ref name="AVTExpr"/>
               </choice>
            </attribute>
            <attribute name="method">
               <ann:documentation>Specifies the output format. Attribute value template.</ann:documentation>
               <choice>
                  <ref name="OutputMethod"/>
                  <ref name="AVTExpr"/>
               </choice>
            </attribute>
            <attribute name="byte-order-mark">
               <ann:documentation>Specifies whether a byte order mark is written at the start of the file. Attribute value template (Boolean).</ann:documentation>
               <choice>
                  <ref name="Boolean"/>
                  <ref name="AVTExpr"/>
               </choice>
            </attribute>
            <attribute name="cdata-section-elements">
               <ann:documentation>Specifies elements whose child text nodes should be wrapped in a CDATA section. Attribute value template.</ann:documentation>
               <choice>
                  <ref name="CDataSectionElements"/>
                  <ref name="AVTExpr"/>
               </choice>
            </attribute>
            <attribute name="doctype-public">
               <ann:documentation>Specifies a public document type declaration. Attribute value template.</ann:documentation>
               <ref name="AVT"/>
            </attribute>
            <attribute name="doctype-system">
               <ann:documentation>Specifies a system document type declaration. Attribute value template.</ann:documentation>
               <ref name="AVT"/>
            </attribute>
            <attribute name="encoding">
               <ann:documentation>Specifies the output encoding. Attribute value template.</ann:documentation>
               <ref name="AVT"/>
            </attribute>
            <attribute name="escape-uri-attributes">
               <ann:documentation>Specifies whether to escape URI attributes in HTML and XHTML documents. Attribute value template (Boolean).</ann:documentation>
               <choice>
                  <ref name="Boolean"/>
                  <ref name="AVTExpr"/>
               </choice>
            </attribute>
            <attribute name="html-version">
               <ann:documentation>Specifies the HTML version. Attribute value template (Decimal).</ann:documentation>
               <choice>
                  <ref name="Decimal"/>
                  <ref name="AVTExpr"/>
               </choice>
            </attribute>
            <attribute name="include-content-type">
               <ann:documentation>Specifies whether to include a meta element in the head of HTML and XHTML documents, specifying the used character encoding. Attribute value template (Boolean).</ann:documentation>
               <choice>
                  <ref name="Boolean"/>
                  <ref name="AVTExpr"/>
               </choice>
            </attribute>
            <attribute name="indent">
               <ann:documentation>Specifies whether to indent the output. Attribute value template (Boolean).</ann:documentation>
               <choice>
                  <ref name="Boolean"/>
                  <ref name="AVTExpr"/>
               </choice>
            </attribute>
            <attribute name="indent-spaces">
               <ann:documentation>The number of spaces to use for indenting. Attribute value template (Integer).</ann:documentation>
               <choice>
                  <ref name="Integer"/>
                  <ref name="AVTExpr"/>
               </choice>
            </attribute>
            <attribute name="item-separator">
               <ann:documentation>A string to intersperse when outputting multiple items. Attribute value template.</ann:documentation>
               <ref name="AVT"/>
            </attribute>
            <attribute name="media-type">
               <ann:documentation>The media type (MIME content type) of the output, to include in a meta element in the head of HTML and XHTML documents. Attribute value template.</ann:documentation>
               <ref name="AVT"/>
            </attribute>
            <attribute name="omit-xml-declaration">
               <ann:documentation>Specifies whether to omit the XML declaration. Attribute value template (Boolean).</ann:documentation>
               <choice>
                  <ref name="Boolean"/>
                  <ref name="AVTExpr"/>
               </choice>
            </attribute>
            <attribute name="standalone">
               <ann:documentation>Specifies whether to include the standalone document declaration. Attribute value template.</ann:documentation>
               <choice>
                  <ref name="OutputStandalone"/>
                  <ref name="AVTExpr"/>
               </choice>
            </attribute>
            <attribute name="suppress-indentation">
               <ann:documentation>Specifies elements that should not be indented. Attribute value template.</ann:documentation>
               <choice>
                  <ref name="SuppressIndentation"/>
                  <ref name="AVTExpr"/>
               </choice>
            </attribute>
            <attribute name="undeclare-prefixes">
               <ann:documentation>Specifies whether to undeclare namespaces when outputting XML 1.1. Attribute value template (Boolean).</ann:documentation>
               <choice>
                  <ref name="Boolean"/>
                  <ref name="AVTExpr"/>
               </choice>
            </attribute>
            <attribute name="output-version">
               <ann:documentation>The version of the output format. Attribute value template.</ann:documentation>
               <choice>
                  <ref name="OutputVersion"/>
                  <ref name="AVTExpr"/>
               </choice>
            </attribute>
         </choice>
      </zeroOrMore>
   </define>

   <!--
      ## Data Types
   -->

   <define name="String">
      <data type="string"/>
   </define>

   <define name="Decimal">
      <data type="decimal"/>
   </define>

   <define name="Integer">
      <data type="int"/>
   </define>

   <define name="Boolean">
      <ann:documentation>One of the values "yes", "no", "true", "false", "1" or "0".</ann:documentation>
      <choice>
         <value>yes</value>
         <value>no</value>
         <value>true</value>
         <value>false</value>
         <value>1</value>
         <value>0</value>
      </choice>
   </define>

   <define name="QName">
      <ann:documentation>A QName. Unprefixed names are in the null namespace.</ann:documentation>
      <data type="Name">
         <param name="pattern">([^:\{\}]+:)?[^:\{\}]+</param>
      </data>
   </define>

   <define name="QName-default">
      <ann:documentation>A QName. Unprefixed names are in the default namespace.</ann:documentation>
      <data type="QName"/>
   </define>

   <define name="EQName">
      <ann:documentation>An EQName. Unprefixed QNames are in the null namespace.</ann:documentation>
      <choice>
         <ref name="QName"/>
         <ref name="URIQualifiedName"/>
      </choice>
   </define>

   <define name="EQName-default">
      <ann:documentation>An EQName. Unprefixed QNames are in the default namespace.</ann:documentation>
      <choice>
         <ref name="QName-default"/>
         <ref name="URIQualifiedName"/>
      </choice>
   </define>

   <define name="URIQualifiedName">
      <data type="Name">
         <param name="pattern">Q\{[^\{\}]*\}([^:\{\}]+:)?[^:\{\}]+</param>
      </data>
   </define>

   <define name="NCName">
      <data type="NCName"/>
   </define>

   <define name="URI">
      <data type="anyURI"/>
   </define>

   <define name="Version">
      <ref name="Decimal"/>
   </define>

   <define name="Language">
      <data type="token">
         <param name="minLength">1</param>
      </data>
   </define>

   <define name="TransformText">
      <ann:documentation>One of the values "none", "normalize-space" or "trim".</ann:documentation>
      <choice>
         <value>none</value>
         <value>normalize-space</value>
         <value>trim</value>
      </choice>
   </define>

   <define name="ExtensionElementPrefixes">
      <ann:documentation>A list of space separated namespace prefixes. Use "#default" to refer to the default namespace.</ann:documentation>
      <list>
         <zeroOrMore>
            <choice>
               <ref name="NCName"/>
               <value>#default</value>
            </choice>
         </zeroOrMore>
      </list>
   </define>

   <define name="UseAttributeSets">
      <ann:documentation>A list of space separated EQNames.</ann:documentation>
      <list>
         <zeroOrMore>
            <ref name="EQName"/>
         </zeroOrMore>
      </list>
   </define>

   <define name="Visibility">
      <ann:documentation>One of the values "public", "private", "final" or "abstract".</ann:documentation>
      <choice>
         <value>public</value>
         <value>private</value>
         <value>final</value>
         <value>abstract</value>
      </choice>
   </define>

   <define name="SortOrder">
      <ann:documentation>One of the values "ascending" or "descending".</ann:documentation>
      <choice>
         <value>ascending</value>
         <value>descending</value>
      </choice>
   </define>

   <define name="OutputMethod">
      <ann:documentation>One of the values "xml", "html", "xhtml", "text", or an EQName that must not be in the null namespace.</ann:documentation>
      <choice>
         <value>xml</value>
         <value>html</value>
         <value>xhtml</value>
         <value>text</value>
         <ref name="EQName"/>
      </choice>
   </define>

   <define name="OutputVersion">
      <ann:documentation>The version of the output method format (usually "1.0" for XML, "5.0" for HTML, etc.)</ann:documentation>
      <data type="NMTOKEN"/>
   </define>

   <define name="OutputStandalone">
      <ann:documentation>One of the values "yes", "no", "true", "false", "1", "0", or "omit".</ann:documentation>
      <choice>
         <ref name="Boolean"/>
         <value>omit</value>
      </choice>
   </define>

   <define name="CDataSectionElements">
      <ann:documentation>A list of space separated EQNames. Unprefixed QNames are in the default namespace.</ann:documentation>
      <list>
         <zeroOrMore>
            <ref name="EQName-default"/>
         </zeroOrMore>
      </list>
   </define>

   <define name="SuppressIndentation">
      <ann:documentation>A list of space separated EQNames. Unprefixed QNames are in the default namespace.</ann:documentation>
      <list>
         <zeroOrMore>
            <ref name="EQName-default"/>
         </zeroOrMore>
      </list>
   </define>

   <define name="AVT">
      <ann:documentation>Attribute value template</ann:documentation>
      <ref name="String"/>
   </define>

   <define name="AVTExpr">
      <ann:documentation>Attribute value template</ann:documentation>
      <data type="string">
         <param name="pattern">.*\{.+\}.*</param>
      </data>
   </define>

   <define name="Name">
      <data type="token">
         <param name="minLength">1</param>
      </data>
   </define>

   <define name="Type">
      <data type="token">
         <param name="minLength">1</param>
      </data>
   </define>

   <define name="ArgumentList">
      <ann:documentation>Argument list</ann:documentation>
      <data type="string">
         <param name="minLength">1</param>
      </data>
   </define>

   <define name="Expression">
      <ann:documentation>Expression</ann:documentation>
      <data type="string">
         <param name="minLength">1</param>
      </data>
   </define>

</grammar>